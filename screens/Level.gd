extends Control

@export var song: Song
@onready var projectile_controller: ProjectileController = $ProjectileController
@onready var rhythm_bar: RhythmBar = $PlayerContainer/Container/CharacterController/RhythmBar
@onready var character_controller: CharacterController = $PlayerContainer/Container/CharacterController

var projectile = preload ("res://scenes/Projectile.tscn")
var converter = OsbConverter.new()

func create_projectile(commands: Array[Command], start_position: Vector2, is_ghost: bool, texture: Texture):
	var p = projectile.instantiate()
	p.commands = commands
	p.start_position = start_position
	p.is_ghost = is_ghost
	p.start_time = commands[0].start_time
	p.texture = texture
	for command in commands:
		command.object = p
	return p

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	song = Song.new()
	song.rhythm = [1698, 1751, 1805, 1858, 1912, 1965, 2019, 2073, 2126, 2179, 2233, 2286, 2340, 2393, 2447, 2501, 2555, 2608, 2662, 2715, 2769, 2822, 2876, 2930, 2983, 3036, 3090, 3143, 3197, 3250, 3304, 3358, 3412, 4269, 4376, 4590, 4698, 4912, 5126, 5555, 5769, 5983, 6198, 6412, 6840, 7269, 7483, 7698, 7912, 8126, 8555, 8983, 9198, 9412, 9626, 9840, 10269, 10483, 10698, 10912, 11019, 11126, 11233, 11340, 11555, 11769, 11876, 11983, 12198, 12412, 12626, 12733, 12840, 12948, 13055, 13269, 13483, 13590, 13698, 13912, 14126, 14340, 14448, 14555, 14662, 14769, 14983, 15198, 15305, 15412, 15519, 15626, 15733, 15840, 15948, 16055, 16162, 16269, 16376, 16483, 16590, 16698, 16805, 16912, 17019, 17126, 18198, 18412, 18626, 18840, 19162, 19269, 19483, 19698, 19912, 20019, 20126, 20340, 20555, 20877, 20984, 21198, 21413, 21627, 21734, 21841, 22055, 22269, 22591, 22698, 22912, 23127, 23341, 23448, 23555, 23769, 23983, 24412, 24840, 25269, 25323, 25376, 25430, 25483, 25537, 25590, 25644, 25698, 26019, 26126, 26340, 26555, 26769, 26876, 26983, 27198, 27412, 27519, 27626, 27840, 28055, 28269, 28483, 28591, 28698, 29126, 29555, 29662, 29769, 29876, 29983, 30198, 30305, 30412, 30626, 30840, 31055, 31162, 31269, 31483, 31698, 32126, 32555, 34055, 34269, 34698, 35126, 35555, 35983, 36412, 36840, 37269, 37698, 38126, 38555, 38983, 39412, 39519, 39626, 39733, 39840, 39948, 40055, 40162, 40269, 40376, 40483, 40590, 40698, 40805, 40912, 41019, 41126, 41233, 41340, 41448, 41555, 41662, 41769, 41876, 41983, 42090, 42198, 42305, 42412, 42519, 42626, 42733, 42840, 42894, 42948, 43001, 43055, 43162, 43269, 43376, 43483, 43537, 43590, 43644, 43698, 43805, 43858, 43912, 44019, 44126, 44180, 44233, 44287, 44340, 44394, 44448, 44501, 44555, 46269, 47126, 47983, 48840, 49698, 50555, 51412, 52269, 53126, 53983, 54126, 54269, 54412, 54555, 54698, 54840, 55269, 55412, 55555, 55698, 56126, 56555, 57412, 57840, 58055, 58269, 58698, 58840, 58983, 59126, 59555, 59983, 60840, 60983, 61126, 61269, 61412, 61555, 61698, 62126, 62269, 62412, 62555, 62983, 63412, 66840, 67698, 67751, 67805, 67858, 67912, 67965, 68019, 68072, 68126, 68179, 68233, 68286, 68340, 68393, 68447, 68500, 68555, 69413, 69466, 69520, 69573, 69627, 69680, 69734, 69787, 69841, 69894, 69948, 70001, 70055, 70108, 70162, 70215, 70269, 71127, 71180, 71234, 71287, 71341, 71394, 71448, 71501, 71555, 71608, 71662, 71715, 71769, 71822, 71876, 71929, 71983, 72841, 72894, 72948, 73001, 73055, 73108, 73162, 73215, 73269, 73322, 73376, 73429, 73483, 73536, 73590, 73643, 73698, 75412, 75840, 75983, 76126, 76269, 76698, 76983, 77126, 77555, 77608, 77662, 77715, 77769, 77876, 77983, 78269, 78555, 78840, 79126, 79269, 79412, 79555, 79698, 80126, 80555, 80983, 81037, 81090, 81144, 81198, 81412, 81519, 81573, 81626, 81680, 81733, 81840, 81983, 82126, 82269, 82555, 82698, 82769, 82840, 82912, 82983, 83055, 83126, 83340, 83555, 83983, 84198, 84269, 84412, 84483, 84555, 84626, 84698, 84769, 84840, 85055, 85126, 85198, 85269, 85412, 85555, 85698, 87412, 87626, 89126, 89340, 90840, 91055, 92555, 92769, 94269, 94483, 95983, 96198, 97698, 97912, 99412, 99465, 99519, 99572, 99626, 99679, 99733, 99787, 99840, 99893, 99947, 100000, 100054, 100107, 100161, 100215, 100269, 100322, 100376, 100429, 100483, 100536, 100590, 100644, 100697, 100750, 100804, 100857, 100911, 100964, 101018, 101072, 101126, 101555, 101769, 101876, 101983, 102198, 102412, 102840, 103269, 103483, 103590, 103698, 103912, 104126, 104555, 104769, 104983, 105198, 105412, 105626, 105840, 106055, 106269, 106483, 106698, 106912, 107126, 107340, 107555, 107983, 108412, 108626, 108733, 108840, 109055, 109269, 109698, 110126, 110340, 110448, 110555, 110769, 110983, 111412, 111626, 111840, 112055, 112269, 112483, 112698, 112912, 113126, 113340, 113555, 113769, 113983, 114198, 114412, 114840, 115162, 115269, 115483, 115590, 115697, 115805, 115912, 116126, 116554, 116983, 117197, 117304, 117412, 117626, 117840, 118269, 118483, 118590, 118697, 118912, 119126, 119233, 119340, 119554, 119769, 119983, 120197, 120412, 120626, 120840, 121054, 121269, 121698, 122020, 122127, 122341, 122448, 122555, 122663, 122770, 122984, 123412, 123841, 124055, 124162, 124270, 124484, 124698, 125127, 125341, 125448, 125555, 125770, 125984, 126091, 126198, 126412, 126627, 126841, 127055, 127270, 127484, 127698, 127912, 128127, 128555, 129412, 129626, 129840, 130698, 131126, 131340, 131555, 132840, 133269, 133698, 134126, 134555, 134983, 135412, 136269, 136483, 136698, 137555, 137983, 138198, 138412, 139698, 139912, 140126, 140340, 140555, 140983, 141412, 141840, 142269, 142275, 142282, 142288]
	song.audio = preload ("res://assets/songs/marenol/audio.mp3")
	song.artist = "LeaF"
	song.title = "MARENOL"
	song.base_dir = "marenol"
	
	# var can_move_toggle_rhythm: Array[int] = [3129, 8379, 16704]
	# character_controller.load_can_move_toggle_rhythm(can_move_toggle_rhythm)
	
	rhythm_bar.note_judged.connect(_on_rhythm_bar_note_judged)

	character_controller.can_move = true
	
	projectile_controller.command_queue = converter.parse_osb_to_projectiles(song.base_dir)
	$AudioController.set_audio(song.audio)
	$AudioController.start()
	$AudioController.song_end.connect(_on_finish)
	
	rhythm_bar.load(song.rhythm)
	# Reset game state on start
	GameState.on_death.connect(on_player_death)
	GameState.all_notes = len(song.rhythm)

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	rhythm_bar.current_time = $AudioController.current_time
	projectile_controller.current_time = $AudioController.current_time
	character_controller.current_time = $AudioController.current_time

func _on_rhythm_bar_note_judged(judgement: int) -> void:
	if judgement == RhythmBar.Judgement.GREAT:
		rhythm_bar.flash_color(Color.SKY_BLUE)
	elif judgement == RhythmBar.Judgement.GOOD:
		rhythm_bar.flash_color(Color.GREEN)
	elif judgement == RhythmBar.Judgement.MISS:
		rhythm_bar.flash_color(Color.RED)

func _on_finish():
	get_tree().change_scene_to_file("res://scenes/ResultScreen.tscn")

func on_player_death() -> void:
	pass
